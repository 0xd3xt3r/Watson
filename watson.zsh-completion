#compdef watson

_watson() {
  typeset -A opt_args
  local context state line curcontext="$curcontext"

  local ret=1

  _arguments : \
    '--version[Show the version and exit.]' \
    '--help[Show help and exit.]' \
    '1: :_watson_cmds' \
    '*::arg:->args' \
  && ret=0

  case "$state" in
    (args)
      case $words[1] in
        (cancel|help|projects|restart|status|stop|sync|tags)
          _arguments : '--help'
          ;;
        (start)
          _arguments -A '-*' : \
            ': :_watson_projects' \
            '*: :_watson_plus_tags' \
            '--help'
          ;;
        (edit)
          _arguments -A '-*' : \
            ': :_watson_frames' \
            '--help'
          ;;
        (remove)
          _arguments : \
            '-f[Dont ask for confirmation]' \
            ': :_watson_frames' \
            '--help'
          ;;
        (log|report)
          _arguments : \
            '*'{-p,--project}'[only for the given project]: :_watson_projects' \
            '*'{-T,--tag}'[only for the given tag]: :_watson_tags' \
            '(--from -f)'{-f,--from}'[start date]:date (YYYY-MM-DD):' \
            '(--to -t)'{-t,--to}'[end date]:date (YYYY-MM-DD):' \
            '--help'
          ;;
        (merge)
          _arguments : \
            '--help' \
            {-f,--force} \
            ': :_files'
          ;;
      esac
      ;;
  esac;
}


(( $+functions[_watson_get_projects] )) ||
_watson_get_projects() {
  if ( [[ ${+_watson_project_list} -eq 0 ]] ); then
    _watson_project_list=($(watson projects))
  fi;
}

(( $+functions[_watson_projects] )) ||
_watson_projects() {
  _watson_get_projects
  local expl
  _description projects expl 'projects'
  compadd "$expl[@]" -a -- _watson_project_list
}

(( $+functions[_watson_frames] )) ||
_watson_frames() {
  local frames
  if [ $+commands['jq'] ]; then
    frames=(${(f)"$(jq -r '.[]|(.[3][:8]+":"+(.[0]|todate)+" "+.[2])' ~/.config/watson/frames)"})
  else
    frames=($(watson frames))
  fi
  _describe -V "frames" frames
}

(( $+functions[_watson_get_tags] )) ||
_watson_get_tags() {
  if ( [[ ${+_watson_tag_list} -eq 0 ]]);
  then
    _watson_tag_list=($(watson tags))
  fi;
}

(( $+functions[_watson_tags] )) ||
_watson_tags() {
  _watson_get_tags
  compadd "$@" -a -- _watson_tag_list
}

(( $+functions[_watson_plus_tags] )) ||
_watson_plus_tags() {
  _watson_get_tags
  local expl
  _description tags expl 'tags'
  compadd "$expl[@]" -a -p '+' -- _watson_tag_list
}

(( $+functions[_watson_cmds] )) ||
_watson_cmds() {
  local commands; commands=(
    'cancel:Cancel the last call to the start command.'
    'config:Get and set configuration options.'
    'edit:Edit a frame.'
    'frames:Display the list of all frame IDs.'
    'help:Display help information'
    'log:Display each recorded session during the...'
    'merge:Perform a merge of the existing frames with a...'
    'projects:Display the list of all the existing...'
    'remove:Remove a frame.'
    'report:Display a report of the time spent on each...'
    'restart:Restart monitoring time for a previously...'
    'start:Start monitoring time for the given project.'
    'status:Display when the current project was started...'
    'stop:Stop monitoring time for the current project.'
    'sync:Get the frames from the server and push the...'
    'tags:Display the list of all the tags.'
  )
  _describe -t commands 'commands' commands "$@"
}

_watson "$@"
